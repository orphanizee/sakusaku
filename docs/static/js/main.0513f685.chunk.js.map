{"version":3,"sources":["../C:/dev/git-branches/sakusaku/src/reducers/TaskReducer.js","../C:/dev/git-branches/sakusaku/src/app/store.js","../C:/dev/git-branches/sakusaku/src/components/ui/Header.js","../C:/dev/git-branches/sakusaku/src/components/ui/DescriptionUsage.js","../C:/dev/git-branches/sakusaku/src/components/AddTask.js","../C:/dev/git-branches/sakusaku/src/components/modals/TaskStatusModal.js","../C:/dev/git-branches/sakusaku/src/components/modals/TaskEditModal.js","../C:/dev/git-branches/sakusaku/src/components/modals/TaskDeleteModal.js","../C:/dev/git-branches/sakusaku/src/components/TaskListItem.js","../C:/dev/git-branches/sakusaku/src/components/panes/DescriptionPane.js","../C:/dev/git-branches/sakusaku/src/components/panes/ImportPane.js","../C:/dev/git-branches/sakusaku/src/components/TaskList.js","../C:/dev/git-branches/sakusaku/src/App.js","../C:/dev/git-branches/sakusaku/src/reportWebVitals.js","../C:/dev/git-branches/sakusaku/src/index.js"],"names":["arr","window","localStorage","getItem","json","JSON","parse","error","clear","initialState","tasks","taskSlice","createSlice","name","reducers","addTask","reducer","state","action","push","payload","setItem","stringify","prepare","taskName","estimatedMinute","estimatedSecond","id","uuidv4","actualTime","status","progress","deleteTask","filter","task","updateTask","find","editTask","exportTasks","str","join","map","row","slice","date","Date","y","getFullYear","m","getMonth","d","getDate","yyyymmdd","toString","h","getHours","min","getMinutes","s","getSeconds","hhmmss","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","concat","click","importTasks","elm","Number","split","_taskSlice$actions","actions","getTasks","updateTaskStatus","updateTaskActualTime","configureStore","taskManager","HeaderExampleSettingsIcon","React","Header","as","Icon","Content","Subheader","DescriptionUsage","Segment","padded","textAlign","size","Step","Group","Title","Description","AddTask","useSelector","shallowEqual","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setTaskName","_useState3","_useState4","setEstimatedMinute","_useState5","_useState6","setEstimatedSecond","Form","onSubmit","e","preventDefault","Field","control","Input","label","placeholder","required","value","onChange","target","basic","content","labelPosition","defaultValue","max","Button","positive","TaskStatusModal","_ref","_React$useState","_React$useState2","open","setOpen","array","initialSeconds","setActualTime","actualTimeSeconds","setActualTimeSeconds","setProgress","_useState7","_useState8","setStatus","intervalRef","useRef","handleOpen","startCount","current","setInterval","useEffect","formattedActualTime","seconds","minutes","Math","floor","hours","padStart","Modal","onClose","onOpen","closeOnDimmerClick","trigger","Popup","icon","onClick","color","position","readOnly","style","backgroundColor","Progress","percent","indicating","width","Actions","clearInterval","primary","TaskEditModal","setName","inline","TaskDeleteModal","negative","TaskListItem","Table","Row","Cell","DescriptionPane","Tab","Pane","Message","header","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ImportPane","uploadedFile","setUploadedFile","importResult","setImportResult","fileInputRef","createRef","fileUpload","_ref2","_asyncToGenerator","_callee","file","formData","config","response","sampleResponse","sample","_context","FormData","append","timeout","headers","Content-type","axios","put","process","data","console","dir","t0","isAxiosError","code","get","_x","apply","arguments","handleDismiss","setTimeout","handleDrag","stopPropagation","success","onDismiss","hidden","onDragEnter","onDragLeave","onDragOver","onDrop","dataTransfer","files","disabled","ref","accept","TaskList","handleExport","panes","menuItem","render","Divider","horizontal","celled","HeaderCell","Body","defaultActiveIndex","App","Container","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","container","getElementById","createRoot","StrictMode","Provider","store"],"mappings":"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","file":"static/js/main.0513f685.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nlet arr = [];\nif (window.localStorage && localStorage.getItem(\"tasks\")) {\n  const json = localStorage.getItem(\"tasks\");\n  try {\n    arr = JSON.parse(json);\n  } catch (error) {\n    localStorage.clear();\n  }\n}\n\nconst initialState = {\n  tasks: arr,\n};\n\nconst taskSlice = createSlice({\n  name: \"taskManager\",\n  initialState,\n  reducers: {\n    addTask: {\n      reducer: (state, action) => {\n        state.tasks.push(action.payload);\n        if (window.localStorage) {\n          localStorage.setItem(\"tasks\", JSON.stringify(state.tasks));\n        }\n      },\n      prepare: (taskName, estimatedMinute, estimatedSecond) => {\n        return {\n          payload: {\n            id: uuidv4(),\n            name: taskName,\n            estimatedMinute: estimatedMinute,\n            estimatedSecond: estimatedSecond,\n            actualTime: \"0:00:00\",\n            status: \"停止中\",\n            progress: 0,\n          },\n        };\n      },\n    },\n    deleteTask: (state, action) => {\n      state.tasks = state.tasks.filter((task) => task.id !== action.payload);\n      if (window.localStorage) {\n        localStorage.setItem(\"tasks\", JSON.stringify(state.tasks));\n      }\n    },\n    updateTask: (state, action) => {\n      const task = state.tasks.find((task) => task.id === action.payload.id);\n      if (task) {\n        task.actualTime = action.payload.actualTime;\n        task.progress = action.payload.progress;\n        task.status = action.payload.status;\n      }\n      if (window.localStorage) {\n        localStorage.setItem(\"tasks\", JSON.stringify(state.tasks));\n      }\n    },\n    editTask: (state, action) => {\n      const task = state.tasks.find((task) => task.id === action.payload.id);\n      if (task) {\n        task.name = action.payload.name;\n        task.estimatedMinute = action.payload.estimatedMinute;\n        task.estimatedSecond = action.payload.estimatedSecond;\n      }\n      if (window.localStorage) {\n        localStorage.setItem(\"tasks\", JSON.stringify(state.tasks));\n      }\n    },\n    exportTasks: (state, action) => {\n      const headers = [\"タスク名\", \"予定工数\", \"実績工数\", \"進捗率(%)\"];\n      let str = headers.join() + \"\\n\";\n\n      state.tasks.map((task) => {\n        var row =\n          task.name +\n          \",\" +\n          (\"00\" + task.estimatedMinute).slice(-2) +\n          \":\" +\n          (\"00\" + task.estimatedSecond).slice(-2) +\n          \",\" +\n          task.actualTime +\n          \",\" +\n          task.progress +\n          \"\\n\";\n        str += row;\n      });\n\n      const date = new Date();\n      const y = date.getFullYear();\n      const m = date.getMonth() + 1;\n      const d = date.getDate();\n      const yyyy = y.toString();\n      const mm = (\"00\" + m).slice(-2);\n      const dd = (\"00\" + d).slice(-2);\n      const yyyymmdd = yyyy + mm + dd;\n      const h = date.getHours();\n      const min = date.getMinutes();\n      const s = date.getSeconds();\n      const hh = (\"00\" + h).slice(-2);\n      const mins = (\"00\" + min).slice(-2);\n      const ss = (\"00\" + s).slice(-2);\n      const hhmmss = hh + mins + ss;\n\n      var blob = new Blob([str], { type: \"text/csv\" });\n      var link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = `tasks_${yyyymmdd}${hhmmss}.csv`;\n      link.click();\n    },\n    importTasks: (state, action) => {\n      const json = [];\n\n      action.payload.map((elm) =>\n        json.push({\n          id: uuidv4(),\n          name: elm[\"タスク名\"],\n          estimatedMinute: Number(elm[\"予定工数\"].split(\":\")[0]),\n          estimatedSecond: Number(elm[\"予定工数\"].split(\":\")[1]),\n          actualTime: elm[\"実績工数\"],\n          status: \"停止中\",\n          progress: elm[\"進捗率(%)\"],\n        })\n      );\n\n      state.tasks = json;\n\n      if (window.localStorage) {\n        localStorage.setItem(\"tasks\", JSON.stringify(json));\n      }\n    },\n  },\n});\n\nexport const {\n  addTask,\n  getTasks,\n  deleteTask,\n  updateTaskStatus,\n  updateTaskActualTime,\n  updateTask,\n  editTask,\n  exportTasks,\n  importTasks,\n} = taskSlice.actions;\n\nexport default taskSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport taskSlice from '../reducers/TaskReducer';\n\nexport default configureStore({\n  reducer: {\n    taskManager: taskSlice,\n  },\n});\n","import React from 'react'\nimport { Header, Icon } from 'semantic-ui-react'\n\nconst HeaderExampleSettingsIcon = () => (\n  <Header as='h2'>\n    <Icon name='tasks' />\n    <Header.Content>\n      サクサクくん\n      <Header.Subheader>進捗率を管理できるTODOアプリ</Header.Subheader>\n    </Header.Content>\n  </Header>\n)\n\nexport default HeaderExampleSettingsIcon","import React from \"react\";\nimport { Segment, Header, Icon, Step } from \"semantic-ui-react\";\n\nconst DescriptionUsage = () => (\n  <Segment padded textAlign=\"center\">\n    <Header size=\"medium\">使い方</Header>\n    <Step.Group>\n      <Step>\n        <Icon name=\"save\" />\n        <Step.Content>\n          <Step.Title>タスクを登録</Step.Title>\n          <Step.Description>タスク名と見積工数を入力</Step.Description>\n        </Step.Content>\n      </Step>\n      <Step>\n        <Icon name=\"hand point up outline\" />\n        <Step.Content>\n          <Step.Title>再生ボタンをクリック</Step.Title>\n          <Step.Description>取り掛かるタスクを選ぶ</Step.Description>\n        </Step.Content>\n      </Step>\n      <Step>\n        <Icon name=\"checkmark\" />\n        <Step.Content>\n          <Step.Title>進捗率に合わせてバーを操作</Step.Title>\n          <Step.Description>全部100%になったら完了！</Step.Description>\n        </Step.Content>\n      </Step>\n    </Step.Group>\n  </Segment>\n);\n\nexport default DescriptionUsage;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Form, Input, Icon } from \"semantic-ui-react\";\n// import { addTask } from \"../actions/TaskActions\";\nimport { addTask } from \"../reducers/TaskReducer\";\nimport { useSelector, shallowEqual } from \"react-redux\";\n\nconst AddTask = () => {\n  const tasks = useSelector((state) => state.tasks, shallowEqual);\n\n\n  const dispatch = useDispatch();\n  const [taskName, setTaskName] = useState(\"\");\n  const [estimatedMinute, setEstimatedMinute] = useState(15);\n  const [estimatedSecond, setEstimatedSecond] = useState(0);\n\n  const handleTaskNameChange = (e) => {\n    setTaskName(e.target.value);\n  };\n  const handleEstimatedMinuteChange = (e) => {\n    setEstimatedMinute(e.target.value);\n  };\n  const handleEstimatedSecondChange = (e) => {\n    setEstimatedSecond(e.target.value);\n  };\n\n  const handleAddTask = (e) => {\n    e.preventDefault();\n    dispatch(addTask(taskName, estimatedMinute, estimatedSecond));\n    setTaskName(\"\");\n    setEstimatedMinute(15);\n    setEstimatedSecond(0);\n  };\n\n  return (\n    <Form onSubmit={handleAddTask}>\n      <div>{tasks}</div>\n      <Form.Group>\n        <Form.Field\n          type=\"text\"\n          control={Input}\n          label=\"タスク名\"\n          placeholder=\"（例：掃除機かけ）\"\n          required\n          value={taskName}\n          onChange={handleTaskNameChange}\n        />\n        <Form.Field>\n          <label>予定工数</label>\n          <Input\n            type=\"number\"\n            label={{ basic: true, content: \"分\" }}\n            labelPosition=\"right\"\n            defaultValue={estimatedMinute}\n            max=\"180\"\n            min=\"0\"\n            required\n            onChange={handleEstimatedMinuteChange}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>　</label>\n          <Input\n            type=\"number\"\n            label={{ basic: true, content: \"秒\" }}\n            labelPosition=\"right\"\n            defaultValue={estimatedSecond}\n            max=\"59\"\n            min=\"0\"\n            required\n            onChange={handleEstimatedSecondChange}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>　</label>\n          <Button positive>\n            <Icon name=\"plus square outline\" type=\"submit\" /> 登録\n          </Button>\n        </Form.Field>\n      </Form.Group>\n    </Form>\n  );\n}\n\nexport default AddTask;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Modal, Button, Form, Progress, Icon, Popup } from \"semantic-ui-react\";\nimport { updateTask } from \"../../reducers/TaskReducer\";\n\nconst TaskStatusModal = ({ task }) => {\n  const [open, setOpen] = React.useState(false);\n\n  const array = task.actualTime.split(\":\");\n  const hourSec = Number(array[0]) * 60 * 60;\n  const minSec = Number(array[1]) * 60;\n  const sec = Number(array[2]);\n  const initialSeconds = hourSec + minSec + sec;\n\n  const [actualTime, setActualTime] = useState(task.actualTime);\n  const [actualTimeSeconds, setActualTimeSeconds] = useState(initialSeconds);\n  const [progress, setProgress] = useState(task.progress);\n  const [status, setStatus] = useState(task.status);\n  const intervalRef = useRef(null);\n\n  const dispatch = useDispatch();\n\n  const handleOpen = () => {\n    setOpen(true);\n    setStatus(\"実行中\");\n    startCount();\n  };\n\n  const handleClose = () => {\n    clearInterval(intervalRef.current);\n    setActualTime(task.actualTime);\n    setActualTimeSeconds(initialSeconds);\n    setProgress(task.progress);\n    setStatus(task.status);\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    clearInterval(intervalRef.current);\n    setStatus(\"停止中\");\n\n    const payload = {\n      id: task.id,\n      actualTime: actualTime,\n      progress: progress,\n      status: status,\n    };\n    dispatch(updateTask(payload));\n\n    setOpen(false);\n  };\n\n  const handleProgressChange = (e) => {\n    setProgress(e.target.value);\n  };\n\n  const startCount = () => {\n    intervalRef.current = setInterval(() => {\n      setActualTimeSeconds((actualTimeSeconds) => actualTimeSeconds + 1);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    setActualTime(formattedActualTime());\n  }, [actualTimeSeconds]);\n\n  useEffect(() => {\n    if (open) {\n      setStatus(progress === \"100\" ? \"完了\" : \"実行中\");\n    } else {\n      setStatus(progress === \"100\" ? \"完了\" : \"停止中\");\n    }\n  }, [open, progress]);\n\n  const formattedActualTime = () => {\n    const seconds = actualTimeSeconds % 60;\n    const minutes = Math.floor(actualTimeSeconds / 60) % 60;\n    const hours = Math.floor(actualTimeSeconds / 3600);\n\n    return `${hours.toString().padStart(2, \"0\")}:${minutes\n      .toString()\n      .padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`;\n  };\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={handleOpen}\n      open={open}\n      closeOnDimmerClick={false}\n      trigger={\n        status === \"実行中\" ? (\n          <Popup\n            trigger={\n              <Button basic icon onClick={handleOpen}>\n                <Icon name=\"pause\" color=\"green\" size=\"large\" />\n              </Button>\n            }\n            content=\"実行中…\"\n            position=\"top left\"\n          />\n        ) : status === \"停止中\" ? (\n          <Popup\n            trigger={\n              <Button basic icon onClick={handleOpen}>\n                <Icon name=\"play\" color=\"orange\" size=\"large\" />\n              </Button>\n            }\n            content=\"実行！\"\n            position=\"top left\"\n          />\n        ) : (\n          <Popup\n            trigger={\n              <Button basic icon onClick={handleOpen}>\n                <Icon name=\"check square\" color=\"blue\" size=\"large\" />\n              </Button>\n            }\n            content=\"完了！\"\n            position=\"top left\"\n          />\n        )\n      }\n    >\n      <Modal.Header>{task.name} を実行中！</Modal.Header>\n      <Modal.Content>\n        <Form>\n          <Form.Field>\n            <label>実績工数</label>\n            <input\n              type=\"text\"\n              value={actualTime}\n              readOnly\n              style={{ backgroundColor: \"#f9f9f9\" }}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>進捗率</label>\n            <Progress percent={progress} indicating progress size=\"medium\" />\n          </Form.Field>\n          <Form.Field>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              value={progress}\n              onChange={handleProgressChange}\n              style={{ width: \"100%\" }}\n            />\n          </Form.Field>\n        </Form>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={handleClose}>キャンセル</Button>\n        <Button primary onClick={handleSave}>\n          保存\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default TaskStatusModal;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Modal, Form, Button, Icon, Popup } from \"semantic-ui-react\";\nimport { editTask } from \"../../reducers/TaskReducer\";\n\nconst TaskEditModal = ({ task }) => {\n  const [open, setOpen] = React.useState(false);\n\n  const [name, setName] = useState(task.name);\n  const [estimatedMinute, setEstimatedMinute] = useState(task.estimatedMinute);\n  const [estimatedSecond, setEstimatedSecond] = useState(task.estimatedSecond);\n  const dispatch = useDispatch();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setName(task.name);\n    setEstimatedMinute(task.estimatedMinute);\n    setEstimatedSecond(task.estimatedSecond);\n    setOpen(false);\n  };\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n  const handleEstimatedMinuteChange = (e) => {\n    setEstimatedMinute(e.target.value);\n  };\n  const handleEstimatedSecondChange = (e) => {\n    setEstimatedSecond(e.target.value);\n  };\n\n  const handleSave = () => {\n    const payload = {\n      id: task.id,\n      name: name,\n      estimatedMinute: estimatedMinute,\n      estimatedSecond: estimatedSecond,\n    };\n    dispatch(editTask(payload));\n    setOpen(false);\n  };\n\n  return (\n    <Modal\n      open={open}\n      onOpen={handleOpen}\n      onClose={() => setOpen(false)}\n      closeOnDimmerClick={false}\n      trigger={\n        <Popup\n          trigger={\n            <Button basic icon onClick={handleOpen}>\n              <Icon name=\"edit\" color=\"teal\" />\n            </Button>\n          }\n          content=\"タスクを編集する\"\n          position=\"left center\"\n        />\n      }\n    >\n      <Modal.Header>タスクを編集する</Modal.Header>\n      <Modal.Content>\n        <Form>\n          <Form.Input\n            label=\"タスク名\"\n            placeholder=\"タスク名を入力してください\"\n            value={name}\n            onChange={handleNameChange}\n          />\n          <Form.Group inline>\n            <label>予定工数</label>\n            <Form.Input\n              type=\"number\"\n              value={estimatedMinute}\n              onChange={handleEstimatedMinuteChange}\n              min=\"0\"\n              max=\"999\"\n              label=\"分\"\n            />\n            <Form.Input\n              type=\"number\"\n              value={estimatedSecond}\n              onChange={handleEstimatedSecondChange}\n              min=\"0\"\n              max=\"59\"\n              label=\"秒\"\n            />\n          </Form.Group>\n        </Form>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={() => handleClose(false)}>キャンセル</Button>\n        <Button primary onClick={handleSave}>\n          更新する\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default TaskEditModal;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Modal, Button, Icon, Popup } from \"semantic-ui-react\";\nimport { deleteTask } from \"../../reducers/TaskReducer\";\n\nconst TaskDeleteModal = ({ task }) => {\n  const [open, setOpen] = React.useState(false);\n  const dispatch = useDispatch();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDelete = () => {\n    dispatch(deleteTask(task.id));\n    setOpen(false);\n  };\n\n  return (\n    <Modal\n      size=\"tiny\"\n      open={open}\n      onOpen={handleOpen}\n      onClose={() => setOpen(false)}\n      closeOnDimmerClick={false}\n      trigger={\n        <Popup\n          trigger={\n            <Button basic icon onClick={handleOpen}>\n              <Icon name=\"trash alternate outline\" />\n            </Button>\n          }\n          content=\"タスクを削除\"\n          position=\"top center\"\n        />\n      }\n    >\n      <Modal.Header>タスクを削除する</Modal.Header>\n      <Modal.Content>\n        <p>{`以下のタスクを削除します。よろしいですか？`}</p>\n        <p>{`タスク名：${task.name}`}</p>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={() => setOpen(false)}>いいえ</Button>\n        <Button negative onClick={handleDelete}>\n          はい\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default TaskDeleteModal;\n","import React from 'react'\nimport { Table } from \"semantic-ui-react\";\nimport TaskStatusModal from \"./modals/TaskStatusModal\";\nimport TaskEditModal from \"./modals/TaskEditModal\";\nimport TaskDeleteModal from \"./modals/TaskDeleteModal\";\n\nconst TaskListItem = ({ task }) => {\n  return (\n    <Table.Row positive={task.status === \"完了\"}>\n      <Table.Cell textAlign=\"center\">\n        <TaskStatusModal task={task} />\n      </Table.Cell>\n      <Table.Cell>{task.name}</Table.Cell>\n      <Table.Cell>\n        {(\"00\" + task.estimatedMinute).slice(-2) +\n          \":\" +\n          (\"00\" + task.estimatedSecond).slice(-2)}\n      </Table.Cell>\n      <Table.Cell>{task.actualTime}</Table.Cell>\n      <Table.Cell>\n        {task.progress}%\n      </Table.Cell>\n      <Table.Cell textAlign=\"center\">\n        <TaskEditModal task={task} />\n        <TaskDeleteModal task={task} />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default TaskListItem;\n","import React from \"react\";\nimport { Tab, Message } from \"semantic-ui-react\";\n\nconst DescriptionPane = () => {\n  return (\n    <Tab.Pane>\n      <Message\n        icon=\"calendar check outline\"\n        header=\"進捗率とともにタスクを管理するアプリ\"\n        content=\"このアプリは、タスクを予定工数、進捗率、完了までにかかった時間と一緒に管理できるアプリです。\"\n      />\n      <Message\n        icon=\"window maximize outline\"\n        header=\"登録したタスクをCookieに保存\"\n        content=\"登録したタスクはブラウザのCookieに保存され、ブラウザを閉じても再度実行可能です。\"\n      />\n      <Message\n        icon=\"cloud download\"\n        header=\"CSVインポート/エクスポートもできる\"\n        content=\"登録したタスク情報を、CSV形式でエクスポートすることも可能です。エクスポートしたCSVから、タスク情報を読み込むことも出来ます。\"\n      />\n    </Tab.Pane>\n  );\n};\n\nexport default DescriptionPane;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Header,\n  Tab,\n  Form,\n  Message,\n  Button,\n  Icon,\n  Segment,\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { importTasks } from \"../../reducers/TaskReducer\";\n\nconst ImportPane = ({\n  uploadedFile,\n  setUploadedFile,\n  importResult,\n  setImportResult,\n}) => {\n  const fileInputRef = React.createRef();\n  const dispatch = useDispatch();\n\n  const onFormSubmit = (e) => {\n    e.preventDefault(); // Stop form submit\n    fileUpload(uploadedFile);\n  };\n\n  const fileChange = (e) => {\n    setUploadedFile(e.target.files[0]);\n  };\n\n  const fileUpload = async (file) => {\n    const url = process.env.REACT_APP_API_ENDPOINT;\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    const config = {\n      timeout: 5000,\n      headers: {\n        \"Content-type\": \"multipart/form-data\",\n      },\n    };\n\n    try {\n      const response = await axios.put(url, formData, config);\n\n      if (response.status === 200) {\n        setImportResult(\"success\");\n        const payload = response.data;\n        dispatch(importTasks(payload));\n      } else {\n        setImportResult(\"failed\");\n        console.dir(response);\n      }\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        if (error.code === \"ECONNABORTED\" || error.code === \"ERR_NETWORK\") {\n          // タイムアウトかCORS制限に引っかかった場合、APIが用意されていないとみなしてサンプルデータを読み込む\n          const sampleResponse = await axios.get(\n            \"sample.json\"\n          );\n          const sample = sampleResponse.data;\n\n          dispatch(importTasks(sample));\n          setImportResult(\"sample\");\n          return;\n        }\n      }\n\n      setImportResult(\"failed\");\n      console.dir(error);\n    }\n  };\n\n  const handleDismiss = () => {\n    setTimeout(() => {\n      setImportResult(\"\");\n    }, 5000);\n  };\n\n  // handle drag events\n  const handleDrag = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      // 特に何もしない\n    } else if (e.type === \"dragleave\") {\n      // 特に何もしない\n    }\n  };\n\n  // triggers when file is dropped\n  const handleDrop = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      setUploadedFile(e.dataTransfer.files[0]);\n    }\n  };\n\n  return (\n    <Tab.Pane>\n      <Header size=\"medium\">\n        CSVファイルからタスク情報をインポートします。\n      </Header>\n      <Message\n        success\n        onDismiss={handleDismiss()}\n        hidden={importResult !== \"success\"}\n        header=\"成功\"\n        content=\"CSVインポートに成功しました\"\n      />\n      <Message\n        success\n        onDismiss={handleDismiss()}\n        hidden={importResult !== \"sample\"}\n        header=\"サンプル\"\n        content=\"WebAPIが起動していないため、サンプルデータを読み込みました\"\n      />\n      <Message\n        negative\n        onDismiss={handleDismiss()}\n        hidden={importResult !== \"failed\"}\n        header=\"失敗\"\n        content=\"CSVインポートに失敗しました。\"\n      />\n      <Segment\n        placeholder\n        onDragEnter={handleDrag}\n        onDragLeave={handleDrag}\n        onDragOver={handleDrag}\n        onDrop={handleDrop}\n      >\n        <Header icon>\n          <Icon name=\"file text outline\" />\n          {uploadedFile === null\n            ? \"ファイルをドラッグ＆ドロップ\"\n            : uploadedFile.name}\n        </Header>\n\n        <Form onSubmit={onFormSubmit}>\n          <Button\n            primary\n            type=\"button\"\n            content=\"ファイルを選択\"\n            labelPosition=\"left\"\n            icon=\"file\"\n            onClick={() => fileInputRef.current.click()}\n          />\n          <Button\n            positive\n            type=\"submit\"\n            content=\"実行\"\n            disabled={uploadedFile === null}\n          />\n          <input\n            ref={fileInputRef}\n            type=\"file\"\n            hidden\n            accept=\"text/csv\"\n            onChange={fileChange}\n          />\n        </Form>\n      </Segment>\n    </Tab.Pane>\n  );\n};\n\nexport default ImportPane;\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Table,\n  Icon,\n  Segment,\n  Divider,\n  Header,\n  Button,\n  Tab,\n} from \"semantic-ui-react\";\nimport TaskListItem from \"./TaskListItem\";\nimport { exportTasks } from \"../reducers/TaskReducer\";\nimport DescriptionPane from \"./panes/DescriptionPane\";\nimport ImportPane from \"./panes/ImportPane\";\n\nconst TaskList = () => {\n  const tasks = useSelector((state) => state.taskManager.tasks);\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const [importResult, setImportResult] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleExport = () => {\n    dispatch(exportTasks());\n  };\n\n  const panes = [\n    {\n      menuItem: {\n        key: \"description\",\n        icon: \"info\",\n        content: \"このアプリについて\",\n      },\n      render: DescriptionPane,\n    },\n    {\n      menuItem: {\n        key: \"taskList\",\n        icon: \"list\",\n        content: \"タスク一覧\",\n      },\n      render: () => (\n        <Tab.Pane>\n          <Segment>\n            <Divider horizontal>\n              <Header as=\"h4\">\n                <Icon name=\"check circle outline\" />\n                タスク一覧\n              </Header>\n            </Divider>\n            <Button primary onClick={handleExport}>\n              CSVエクスポート\n            </Button>\n            <Table celled>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>タスク実行ボタン</Table.HeaderCell>\n                  <Table.HeaderCell>タスク名</Table.HeaderCell>\n                  <Table.HeaderCell>予定工数</Table.HeaderCell>\n                  <Table.HeaderCell>実績工数</Table.HeaderCell>\n                  <Table.HeaderCell>進捗率</Table.HeaderCell>\n                  <Table.HeaderCell>操作</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {tasks.map((task) => (\n                  <TaskListItem key={task.id} task={task} />\n                ))}\n              </Table.Body>\n            </Table>\n          </Segment>\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: {\n        key: \"import\",\n        icon: \"upload\",\n        content: \"CSVからタスクをインポート\",\n      },\n      render: () => (\n        <ImportPane\n          uploadedFile={uploadedFile}\n          setUploadedFile={setUploadedFile}\n          importResult={importResult}\n          setImportResult={setImportResult}\n        />\n      ),\n    },\n  ];\n\n  if (tasks == null || tasks.length === 0) {\n    panes[1].render = () => (\n      <Segment>\n        <Divider horizontal>\n          <Header as=\"h4\">タスクがありません。</Header>\n        </Divider>\n      </Segment>\n    );\n  }\n\n  return <Tab panes={panes} defaultActiveIndex={1} />;\n};\n\nexport default TaskList;\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport HeaderExampleSettingsIcon from \"./components/ui/Header\";\nimport DescriptionUsage from \"./components/ui/DescriptionUsage\";\nimport AddTask from \"./components/AddTask\";\nimport TaskList from \"./components/TaskList\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Container>\n      <HeaderExampleSettingsIcon />\n      <DescriptionUsage />\n      <AddTask />\n      <TaskList />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css'\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}